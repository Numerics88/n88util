# build-and-upload-conda-packages.yaml
# Refer to https://github.com/uibcdf/action-build-and-upload-conda-packages
name: Build and upload platform-specific conda packages

on:
  push:
    branches:
      - kean/ci
  workflow_dispatch: # Allows manual execution of the workflow

jobs:
  conda_deployment:
    name: Conda deployment
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # OS types: Windows x64, macOS 13 (last intel based runner), macOS latest (Apple silicon), and Ubuntu x64
        # Python versions: 3.9, 3.10, and 3.11
        # ------------------------------------------------------
        # os: ["windows-latest", "macos-13", "macos-latest", "ubuntu-latest"]
        # python-version: ["3.9", "3.10", "3.11"]
        os: ["ubuntu-latest"]
        python-version: ["3.11"]
        

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          ref: kean/ci # UPDATE: Change to master branch when finished testing
      
      - name: Verify OS type, architecture, and Python version
        run: |
          echo "OS: ${{ matrix.os }}"
          echo "Python version: ${{ matrix.python-version }}"
          echo "Architecture: $(uname -m)"
        shell: bash

      - name: Conda environment creation and activation
        uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: ${{ matrix.python-version }}
          environment-file: conda-recipe/n88util/environment.yml  # Path to conda environment file
          auto-update-conda: false
          auto-activate-base: false
          show-channel-urls: true

      - name: Set GIT_DESCRIBE_TAG # This is a custom step to set the GIT_DESCRIBE_TAG environment variable
        run: |
          echo "GIT_DESCRIBE_TAG=$(git describe --tags --always)" >> $GITHUB_ENV
        shell: bash

      - name: Install Conda Build
        run: conda install -y conda-build

      - name: Setup MSVC Environment (Windows)
        if: runner.os == 'Windows'
        run: |
            for /f "usebackq tokens=*" %%i in (`"C:\Program Files (x86)\Microsoft Visual Studio\Installer\vswhere.exe" -latest -property installationPath`) do set VS_PATH=%%i
            call "%VS_PATH%\VC\Auxiliary\Build\vcvars64.bat"
            set >> %GITHUB_ENV%
        shell: cmd

      - name: Build and upload the conda packages
        uses: uibcdf/action-build-and-upload-conda-packages@v1.4.0
        with:
          python-version: ${{ matrix.python-version }} # needed for conda-build
          meta_yaml_dir: conda-recipe/n88util
          user: skboyd # Anaconda username (or an Anaconda organization username Numerics88?)
          token: ${{ secrets.N88UTIL_NUMERICS88 }}
          upload: false # UPDATE: Change to true when finished testing

      - name: Debugging - find and print tar.bz2 files
        run: |
          echo "Finding tar.bz2 files in /tmp..."
          find /tmp -type f -name "*.tar.bz2" -print
        shell: bash
        continue-on-error: true

      - name: Reformat paths
        id: reformat-paths
        run: |
          # Reformat paths to be newline-separated
          echo "Reformatting paths to be newline-separated..."
          find /tmp -type f -name "*.tar.bz2" | tr '\n' '\r\n' > $GITHUB_ENV
          echo "Newline-separated paths saved to GITHUB_ENV"
        shell: bash

      - name: Print contents of /tmp
        run: |
          echo "Contents of /tmp:"
          ls -l /tmp
        shell: bash

      - name: Upload Conda artifact
        uses: actions/upload-artifact@v4
        with:
          name: conda-artifact-${{ matrix.os }}-${{ matrix.python-version }}
          path: ${{steps.reformat-paths.outputs.newline-separated-paths}}